/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define LOWER 1
#define RAISE 2
#define FN 3
enum {
	_japWinQWERTY,
	_winQWERTY,
	_macQWERTY,
	_LinuxQWERTY,
	_phoneQWERTY,
	_baseMOVEPlate,
	_japMOVEPlate,
	_LOWER,
	_RAISE,
	_FUN,
	_MOUSEWinPlate,
	_MOUSEmacPlate,
	_MOUSELinuxPlate,
	_MOUSEphonePlate,
};

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

// Convenience macro to make the Bluetooth commands shorter
#define BT(n) BT_SEL n

// Hyper key: all the modifiers
#define HYPER LC(LS(LA(LGUI)))

/ {
    chosen {
        // Valid choices: [ &mit_layout, &ortho_layout ]
        zmk,physical-layout = &mit_layout;
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "_japWinQWERTY";
            bindings = <
   &kp C_PP    &mo FN      &kp C_MUTE
   
   &kp DEL   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5		&kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &kp BKSP
   &mt LGUI TAB   &kp Q   &kp W   &kp E   &kp R   &kp T		&kp Y   &kp U   &kp I   &kp O   &kp P   &kp MINUS
   &mt LCTRL ENTE   &kp A   &kp S   &kp D   &kp F   &kp G		&kp H   &kp J   &kp K   &kp L   &kp SEMI   &kp SQT
   &kp LSHFT   &kp Z   &kp X   &kp C   &kp V   &kp B		&kp N   &kp M   &kp COMMA   &kp PERIOD   &kp SLASH   &kp RSHFT
   &kp K_APP   &lt _MOUSEWinPlate BKSP   &kp LANG5   &mt LALT DEL   &mt _japMOVEPlate ESC   &mt LCTRL SPACE		&mt LCTRL SPACE   &kp SLASH   &kp EQUAL   &kp GRAVE   &kp ENTE

            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            label = "_winQWERTY";
//            bindings = <

   &trans  &trans    &trans
   
   &trans   &trans   &trans   &trans   &trans   &trans		&trans   &trans      &trans   &trans   &trans   &trans
   &trans   &trans   &trans   &trans   &trans   &trans		&trans   &trans      &trans   &trans   &trans   &trans
   &trans   &trans   &trans   &trans   &trans   &trans		&trans   &trans      &trans   &trans   &trans   &trans
   &trans   &trans   &trans   &trans   &trans   &trans		&trans   &trans      &trans   &trans   &trans   &trans
   &trans   &trans   &trans   &trans   &trans   &trans		&lt _baseMOVEPlate SPACE   &trans   &trans   &trans   &trans   &trans

//            >;
//            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

//        raise_layer {
//            label = "_macQWERTY";
//            bindings = <
//
//   &trans  &trans    &trans
//   
//   &trans   &trans   &trans   &trans   &trans   &trans		&trans   &trans      &trans   &trans   &trans   &trans
//   &trans   &trans   &trans   &trans   &trans   &trans		&trans   &trans      &trans   &trans   &trans   &trans
//   &trans   &trans   &trans   &trans   &trans   &trans		&trans   &trans      &trans   &trans   &trans   &trans
//   &trans   &trans   &trans   &trans   &trans   &trans		&trans   &trans      &trans   &trans   &trans   &trans
//   &trans   &trans   &trans   &trans   &trans   &trans		&lt _baseMOVEPlate SPACE   &trans   &trans   &trans   &trans   &trans
//
//            >;
//            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
//        };



























/* Move Layer
 * ,------------------------------------------------------------------------------------------------------------------------.
 * |         |   F1    |   F2    |   F3    |   F4    |   F5    ||   F6    |   F7    |   F8    |   F9    |   F10   |         |
 * |------------------------------------------------------------------------------------------------------------------------.
 * |         |    !    |    @    |    #    |    $    |    %    ||    ^    |    &    |    *    |    (    |    )    |    _    |
 * |---------+---------+---------+---------+---------+---------++---------+---------+---------+---------+---------+---------|
 * |         |   Home  |   End   |   Esc   |    =    |   Tab   ||    ←   |    ↓   |    ↑   |    →   |    :    |    "    |
 * |---------+---------+---------+---------+---------+---------++---------+---------+---------+---------+---------+---------|
 * | LShift  |    1    |    2    |    3    |    4    |    5    ||    6    |    7    |    8    |    9    |    0    | RShift  |
 * |---------+---------+---------+---------+---------+---------++---------+---------+---------+---------+---------+---------|
 * | Hyper   |         |         | 配列済み| 配列済み|         || 配列済み|    |    |    +    |         |    ~    |BackSpace|
 * `------------------------------------------------------------------------------------------------------------------------'
 */

        func_layer {
            label = "_baseMOVEPlate";
//            bindings = <

   &trans  &trans    &trans
   
   &trans   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5		&kp F6   &kp F7   &kp F8   &kp F9   &kp F10   &trans
   &trans   &kp EXCL   &kp AT   &kp HASH   &DOLLAR   &kp PERCENT		&kp CARET   &kp AMPERSAND   &kp ASTERISK   &kp LPAR   &kp RPAR   &kp UNDER
   &trans   &kp HOME   &kp END   &kp ESC   &kp KP_EQUAL   &kp TAB		&kp LEFT   &kp DOWN   &kp UP   &kp RIGHT   &kp COLON   &kp DQT
   &kp LSHIFT   &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_N4   &kp KP_N5		&kp KP_N6   &kp KP_N7   &kp KP_N8   &kp KP_N9   &KP_N0   &kp RSHIFT
   &kp HYPER   &trans   &trans   &trans   &trans   &trans		&trans   &kp PIPE   &kp KP_PLUS   &trans   &kp TILDE   &kp BSPC

//            >;
//            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
